{
  "name": "Google Analytics Server Side",
  "tagline": "Server Side Google Analytics Tracking in PHP",
  "body": "Google Analytics Server Side is an implementation of the [Google Analytics web tracking ECMAScript][2] in [PHP][3].\r\nIt provides server side Google Analytics tracking with a small easy to use PHP 5.3+ framework.\r\nImplemented are the parts of the interface that would be available without [ECMAScript][6] in a\r\nbrowser to detect certain features such as screen resolution / colour, flash / java plugin version etc.\r\n\r\nCODE: `git clone git://github.com/chappy84/google-analytics-server-side.git`  \r\nHOME: <http://github.com/chappy84/google-analytics-server-side>  \r\nBUGS: <http://github.com/chappy84/google-analytics-server-side/issues>  \r\n\r\nGoogle Analytics was developed by [Google][4].  \r\nThis PHP adaptation is maintained by [Tom Chapman][5].\r\n\r\n[2]: https://developers.google.com/analytics/devguides/collection/gajs/\r\n[3]: http://www.php.net/\r\n[4]: http://www.google.com/analytics\r\n[5]: http://tom-chapman.uk/\r\n[6]: http://en.wikipedia.org/wiki/ECMAScript\r\n\r\n[![Build Status](https://secure.travis-ci.org/chappy84/google-analytics-server-side.png?branch=master)](http://travis-ci.org/chappy84/google-analytics-server-side)\r\n[![SensioLabsInsight](https://insight.sensiolabs.com/projects/655a47b5-a324-487f-9b14-67da007b24d1/mini.png)](https://insight.sensiolabs.com/projects/655a47b5-a324-487f-9b14-67da007b24d1)\r\n[![Latest Stable Version](https://poser.pugx.org/chappy84/google-analytics-server-side/v/stable)](https://packagist.org/packages/chappy84/google-analytics-server-side)\r\n[![Total Downloads](https://poser.pugx.org/chappy84/google-analytics-server-side/downloads)](https://packagist.org/packages/chappy84/google-analytics-server-side)\r\n[![License](https://poser.pugx.org/chappy84/google-analytics-server-side/license)](https://packagist.org/packages/chappy84/google-analytics-server-side)\r\n[![Dependency Status](https://www.versioneye.com/user/projects/55a2bc5132393900170004a9/badge.svg?style=flat)](https://www.versioneye.com/user/projects/55a2bc5132393900170004a9)\r\n\r\nInstallation\r\n------------\r\n\r\nThe package is available to install using [composer][7] from the [packagist][8] repository since\r\nv0.8.6-beta. Simply add [chappy84/google-analytics-server-side][9] to the \"require\" section and\r\nit'll be installed, checking the requirements.\r\n\r\nAlternatively if you don't want to use composer, the framework, without tests, can be included by\r\nusing the following:\r\n\r\n```php\r\nrequire_once '<base_dir>' . DIRECTORY_SEPARATOR . 'Gass' . DIRECTORY_SEPARATOR . 'Bootstrap.php';\r\n```\r\n\r\nwhere `<base_dir>` is the base directory of Google Analytics Server Side on your filesystem.\r\n\r\n[7]: http://getcomposer.org/\r\n[8]: https://packagist.org/\r\n[9]: https://packagist.org/packages/chappy84/google-analytics-server-side\r\n\r\nUsage\r\n-----\r\n\r\nGoogle Analytics Server Side can be used simply in the following manner:\r\n\r\n```php\r\n$gass = new \\Gass\\GoogleAnalyticsServerSide;\r\n$gass->setAccount('UA-XXXXXXX-X')\r\n    ->trackPageView();\r\n```\r\n\r\nThe class constructor accepts an optional associative array parameter of available\r\nconfiguration options. Basically if there's a public method to set the variable\r\nthen it can be passed as part of the array to the class.\r\n\r\ne.g.\r\n\r\n```php\r\n$gass = new \\Gass\\GoogleAnalyticsServerSide;\r\n$gass->setAccount('UA-XXXXXXX-X')\r\n    ->setBotInfo(true);\r\n```\r\n\r\ncould also be done like this:\r\n\r\n```php\r\n$gass = new \\Gass\\GoogleAnalyticsServerSide(\r\n\tarray(\r\n\t\t'account' => 'UA-XXXXXXX-X',\r\n        'botInfo' => true\r\n    )\r\n);\r\n```\r\n\r\nThese options can also be set individually by the method setOption,\r\nor in one go with the method setOptions\r\n\r\nMost of the [current basic methods][10] available in ga.js tracking code have been\r\nimplemented.  \r\nThe methods implemented are:\r\n\r\n- deleteCustomVar\r\n- getAccount\r\n- getVersion\r\n- getVisitorCustomVar\r\n- setAccount\r\n- setCustomVar\r\n- setSessionCookieTimeout\r\n- setVisitorCookieTimeout\r\n- trackPageview\r\n\r\nThe methods not implemented yet are:\r\n\r\n- getName\r\n- setSampleRate\r\n- setSiteSpeedSampleRate\r\n\r\nExtra methods are also available for the information which would normally be\r\npre-determined in the javascript or http request object from the browser. The User Agent,\r\nServer Name, Remote Address, Document Path, Document Referer, Google Analytics Version,\r\nAccepted Language, Cookies and Search Engines are all set automatically without any method\r\ncalls being required by the developer. However, the following methods are available to set\r\nthese variables and should be called before the trackPageView / trackEvent method to save\r\nthe tracking information:\r\n\r\n- setVersion\r\n- setAcceptLanguage\r\n- setUserAgent\r\n- setServerName\r\n- setRemoteAddress\r\n- setDocumentPath\r\n- setDocumentReferer\r\n- setCookies\r\n\r\nOn top of this there are also set methods to alter the default values for the the page\r\ntitle and document character set.  \r\nThese are available via the following methods:\r\n\r\n- setPageTitle\r\n- setCharset\r\n\r\nGet methods are also provided for all of the above.  \r\nAll methods but get methods allow chaining for ease of use.\r\n\r\n### Event Tracking\r\n\r\nEvent tracking is implemented using the [same functionality as in the ga.js tracking code][11]\r\n\r\n```php\r\n\\Gass\\GoogleAnalyticsServerSide::trackEvent(\r\n\t string $category,\r\n     string $action,\r\n    [string $label = null,\r\n    [int    $value = null,\r\n    [bool   $nonInteraction = false]]]\r\n);\r\n```\r\n\r\nN.B. trackEvent() does not require trackPageView() to be called first.  \r\nHowever if you do not call trackPageView first or set nonInteraction to true then your\r\npages/visit metric may become less than 1.\r\n\r\n[10]: https://developers.google.com/analytics/devguides/collection/gajs/methods/gaJSApiBasicConfiguration\r\n[11]: https://developers.google.com/analytics/devguides/collection/gajs/methods/gaJSApiEventTracking\r\n\r\nBotInfo\r\n-------\r\n\r\nYou must enable botInfo for it to ignore any search/trawler bots.  \r\nTo do this you need to pass one of true, and associative array or an instance of the\r\nadapter you want to use into the class.  The code will default to the BrowsCap adapter.\r\nSetting this to true will use the default. If you pass an associative array, this will be\r\npassed to BotInfo and through to the Adapter. When providing an associative array you can\r\nalso pass the element 'adapter' which will tell BotInfo which class to use as the Adapter.\r\nYou can also pass an instance of a Gass\\BotInfo Adapter which will be used by the\r\nGass\\BotInfo Class.\r\n\r\n### Adapters\r\n\r\nThere are two adapters available in the GASS framework\r\n\r\n#### BrowsCap\r\nThere is one optional index as part of the array configuration parameter.\r\n\r\n- browscap: This is the same as the php ini setting [browscap][12], a file-system location\r\nwhere the [full_php_browscap.ini file][13] is located / can be downloaded to.\r\n\r\ne.g.\r\n\r\n```php\r\n$gass = new \\Gass\\GoogleAnalyticsServerSide(\r\n\tarray(\r\n\t\t'botInfo' => true,\r\n        'account' => 'UA-XXXXXXX-X'\r\n    )\r\n);\r\n```\r\n\r\nor\r\n\r\n```php\r\n$gass = new \\Gass\\GoogleAnalyticsServerSide(\r\n\tarray(\r\n\t\t'botInfo' => array(\r\n\t\t\t'adapter' => 'BrowsCap',\r\n            'browscap' => '/tmp/full_php_browscap.ini'\r\n        ),\r\n        'account' => 'UA-XXXXXXX-X'\r\n    )\r\n);\r\n```\r\n\r\nor\r\n\r\n```php\r\n$gass = new \\Gass\\GoogleAnalyticsServerSide(array('account' => 'UA-XXXXXXX-X'));\r\n$browsCapAdapter = new \\Gass\\BotInfo\\BrowsCap;\r\n$gass->setBotInfo($browsCapAdapter);\r\n```\r\n\r\nWhen an update for the browscap ini file is available [on the server][13] the code will\r\nautomatically download the file into the location provided.\r\n\r\nN/B: You MUST either provide the browscap setting or have it set in php.ini, otherwise\r\nthis adapter will not work.\r\n\r\nN/B2: Due to an issue with the browscap ini file only being loaded when PHP starts up\r\n(which is with the web-server apache, PHP-FPM etc.) the code deals with the ini file\r\nitself, rather than using the built in get_browser function. This ensures the auto-update\r\nfunctionality will work without the need to restart the web-server.\r\n\r\n#### UserAgentStringInfo\r\n\r\n***DEPRECATED*** - until udger.com implements csvs to replace user agent string info's csv, as user-agent-string.info has now shut down\r\n\r\nThis was the previous default for Google Analytics Server Side which downloads a csv list\r\nof search engine crawlers from [user-agent-string.info][14].  \r\nThere are three options as part of the array configuration parameter:\r\n\r\n- cachePath: where to save the list of bots downloaded from user-agent-string.info (required)\r\n- cacheFilename: the filename to save the list of bots to (optional, defaults to bots.csv)\r\n- cacheLifetime: number of secods before the cache expires (optional, defaults to 2592000 (30 days))\r\n\r\nThis can be implemented in the same way as the BrowsCap adapter.\r\n\r\n[12]: http://www.php.net/manual/en/misc.configuration.php#ini.browscap\r\n[13]: http://browscap.org/\r\n[14]: http://user-agent-string.info/download\r\n\r\nHttp\r\n----\r\n\r\nThis is a singleton class which provides http functionality across all sections of the\r\nGASS framework.  \r\nThis will default to using the Curl adapter if it's available otherwise it'll fall back\r\nto the Stream adapter. It requires no options. All options should be passed as a\r\nconfiguration option to GoogleAnalyticsServerSide either via the configuration parameter\r\nin the 'http' element or via the setHttp parameter. This can either be an associative\r\narray or an instance of the required adapter.\r\n\r\ne.g.\r\n\r\n```php\r\n$gass = new \\Gass\\GoogleAnalyticsServerSide(\r\n\tarray(\r\n\t\t'account' => 'UA-XXXXXXX-X',\r\n        'http' => array(\r\n        \t'adapter' => 'Curl',\r\n            CURLOPT_PROXY => 'http://exampleproxy.local:8080'\r\n        )\r\n    )\r\n);\r\n```\r\n\r\nor\r\n\r\n```php\r\n$gass = new \\Gass\\GoogleAnalyticsServerSide(array('account' => 'UA-XXXXXXX-X'));\r\n$httpAdapter = new \\Gass\\Http\\Stream;\r\n$gass->setHttp($httpAdapter);\r\n```\r\n\r\n### Adapters\r\n\r\nThere are two Adapters available to Gass\\Http, these are:\r\n\r\n#### Stream\r\nStream creates a stream context and utilises this stream with file_get_contents. See\r\n[php's example][15]. Any options provided to this class will go into the 'http' array for\r\nthe stream context, thus you may pass any headers or proxy information etc. into this to\r\nuse in the connection when made.\r\n\r\n#### Curl\r\nThis utilises the php extension cURL. cURL is recommended, however as it's not always\r\navailable the code falls back to stream to allow all servers make http requests in the\r\ncorrect way.  \r\nAny options provided to this class must be passed using the [curl constants][16] as\r\nidentifiers (associative array keys or option names).\r\n\r\n[15]: http://www.php.net/manual/en/function.file-get-contents.php#refsect1-function.file-get-contents-examples\r\n[16]: http://www.php.net/manual/en/function.curl-setopt.php#refsect1-function.curl-setopt-parameters\r\n\r\nEnd User Location\r\n-----------------\r\n\r\nThe End User's Location will be reported as the location of the server if you use the GA Account\r\nnumber in the format UA-XXXXXXX-X as provided by Google. If you alter this to the format\r\nMO-XXXXXXX-X then the location will be tracked correctly and appear on the location map as\r\nit does with the normal ECMAScript tracking.\r\n\r\nCookies\r\n-------\r\n\r\nCookies are automatically set when either trackPageView or trackEvent are called.  \r\nThey are however only sent as headers to the browser once, thus if you call either\r\nfunction more than once, or call both functions, then they will only be included in the\r\nheaders when the first call is made.\r\n\r\nYou do have the option to turn off the sending of the cookie headers to the browser which\r\ncan be done by calling disableCookieHeaders before calling trackPageView / trackEvent for\r\nthe first time.\r\n\r\n#### EU Cookie Law and the Do Not Track header\r\n\r\nYep, as European web developers we all hate one of the most idiotic and stupid pieces of\r\nlegislation ever introduced by bureaucrats that don't understand either the technology\r\nitself or the ridiculously easy work arounds using such things as Javascript, Flash,\r\nSilverlight, etc. See [@samyk][17]'s [evercookie][18] if you don't know.\r\n\r\nAnyway, in response to this, since Google themselves deal with the [Do Not Track][19] header\r\nand to obey the user's preference this framework should silently deal with this\r\nheader in the same way, thus the user's preference is accepted by default.\r\n\r\nThis framework however provides the developer the option to ignore the user's preference.\r\nYou can do this by making the following call:\r\n\r\n```php\r\n$gass->setIgnoreDoNotTrack(true);\r\n```\r\n\r\nTo reverse this and no longer ignore the Do Not Track header you can make the following call:\r\n\r\n```php\r\n$gass->setIgnoreDoNotTrack(false);\r\n```\r\n\r\n[17]: https://github.com/samyk\r\n[18]: https://github.com/samyk/evercookie\r\n[19]: http://www.w3.org/TR/tracking-dnt/\r\n\r\nTest Suite\r\n----------\r\n\r\nMaster: [![Master Code Coverage Status](https://coveralls.io/repos/chappy84/google-analytics-server-side/badge.png?branch=master)](https://coveralls.io/r/chappy84/google-analytics-server-side?branch=master)\r\nDevelopment: [![Development Code Coverage Status](https://coveralls.io/repos/chappy84/google-analytics-server-side/badge.png?branch=development)](https://coveralls.io/r/chappy84/google-analytics-server-side?branch=development)\r\n\r\nThis framework uses [PHPUnit][22], along with [TravisCI][23], to test functionality on the\r\nsupported PHP minor versions 5.3, 5.4, 5.5, 5.6, 7.0 and 7.1. This is done by default on the latest bug fix\r\npoint release of that minor point version to ensure it works.\r\n\r\nProvisional PHP nightly & [HHVM][24] support are provided as-well however these are not guaranteed.\r\n\r\nThe test suite requires [composer][7] for it's development dependencies. Please see the instructions\r\n[here][20] on how to install it. After which you can [install][21] all the required dev dependencies\r\nusing `composer install`.\r\n\r\n[20]: https://getcomposer.org/doc/00-intro.md#downloading-the-composer-executable\r\n[21]: https://getcomposer.org/doc/03-cli.md#install\r\n[22]: https://github.com/sebastianbergmann/phpunit\r\n[23]: https://travis-ci.org/\r\n[24]: http://hhvm.com/\r\n\r\nPHP Version\r\n-----------\r\n\r\nThe minimum supported version is PHP 5.3.23\r\n\r\n#### Un-supported versions of PHP\r\n\r\nI've left the following branches of versions which worked with the now un-supported versions of PHP:\r\n\r\n- [PHP 5.2 Branch][25]\r\n\r\nPlease feel free to use, fork etc. any of these branches. Any issues which arise in them won't\r\nhave fixes attempted I'm afraid. However if you've attempted a fix yourself, please lodge a\r\npull-request and It'll be considered.\r\n\r\n[25]: https://github.com/chappy84/google-analytics-server-side/tree/php-5.2\r\n\r\nLICENSE\r\n-------\r\n\r\nThis software uses the BSD 3-Clause license:\r\n\r\nCopyright (c) 2011-2015, Tom Chapman (http://tom-chapman.uk)\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without modification, are\r\npermitted provided that the following conditions are met:\r\n\r\n1. Redistributions of source code must retain the above copyright notice, this list of conditions\r\nand the following disclaimer.\r\n\r\n2. Redistributions in binary form must reproduce the above copyright notice, this list of\r\nconditions and the following disclaimer in the documentation and/or other materials provided with\r\nthe distribution.\r\n\r\n3. Neither the name of the copyright holder nor the names of its contributors may be used to\r\nendorse or promote products derived from this software without specific prior written permission.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\r\nIMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\r\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\r\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\nWHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\r\nWAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\r\n\r\nN/B: This code is nether written or endorsed by Google or any of it's employees.\r\n\"Google\" and \"Google Analytics\" are trademarks of Google Inc. and it's respective subsidiaries.\r\n",
  "google": "UA-33383621-1",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}